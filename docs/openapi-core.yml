openapi: 3.0.3
info:
  title: Java API Exercise - Core Criteria
  description: |-
  version: 0.2.2

servers:
  - url: http://localhost:4000
tags:
  - name: books
paths:
  /books:
    post:
      tags:
        - books
      summary: Book POST route
      description: Description of an book POST route
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBook'
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
    get:
      tags:
        - books
      summary: Book GET route
      description: Description of an book GET route
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllBooks'
  /books/{id}:
    put:
      tags:
        - books
      summary: Book PUT route
      description: Description of an book PUT route
      parameters:
        - name: id
          in: path
          description: The ID of the book to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBook'
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
    delete:
      tags:
        - books
      summary: Book DELETE route
      description: Description of an book DELETE route
      parameters:
        - name: id
          in: path
          description: The ID of the book to delete
          required: true
          schema:
            type: integer
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'

components:
  schemas:
    CreateBook:
      type: object
      required: [title, genre,Author,Publisher]
      properties:
        title:
          type: string
          example: "book title"
        genre:
          type: string
          example: "book genre"
        Author:
          type: object
        Publisher:
          type: object
    Book:
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: "book title"
        genre:
          type: string
          example: "book genre"
        Author:
          type: object
        Publisher:
          type: object
    Author:
      type: object
      properties:
        id:
          type: integer
          example: 1
        first_name:
          type: string
          example: "first_name"
        last_name:
          type: string
          example: "last_name"
        email:
          type: String
          format: email
          example: "email@example.com"
        alive:
          type: boolean
          example: true
    Publisher:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: author
        location:
          type: string
          example: hell
    AllBooks:
      type: array
      items:
        $ref: '#/components/schemas/Book'
